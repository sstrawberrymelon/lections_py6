# 1) '''Магическими называются даты, в которых произведение дня и месяца
# составляет последние две цифры года. Например, 10 июня 1960 года –
# магическая дата, поскольку 10 ´ 6 = 60. Напишите функцию, определя-
# ющую, является ли введенная дата магической. Используйте написан-
# ную функцию в главной программе для отображения всех магических
# дат в XX ве­ке.'''

# def MagicNum(day,month,year):
#     """Программа распознает является ли дата магической 
#         Args:
#             принимает день месяц год
#         Result:
#             выводит является ли дата магичской 
#             (если 10.06.1960 -> 10*06=1960)"""
#     res1 = day * month 
#     res1 = str(res1)
#     if res1 == str(year)[-2:]:
#         print('Ваша дата явдяется магической!')
#     else: 
#         print('Ваша дата не является магической!')

# MagicNum(int(input('Введите день:')),int(input('Введите месяц:')),input('Введите год:'))

    
# #

# 2) '''Напишите функцию для определения количества дней в конкретном ме-
# сяце. Ваша функция должна принимать два параметра: номер месяца
# в виде целого числа в диапазоне от 1 до 12 и год, состоящий из четырех
# цифр. Убедитесь, что функция корректно обрабатывает февраль високос-
# ного года. В основной программе запросите у пользователя номер месяца
# и год и отобразите на экране количество дней в указанном месяце.'''
# dict = {'Январь': 31,'Февраль': 28 ,'Март' : 31, 'Апрель':30,'Май': 31, 'Июнь': 30, 'Июль': 31, 'Август': 31,'Сентрябрь': 30,'Октрябрь': 31,'Ноябрь': 30, 'Декабрь': 31 }
# def Monthfunc(month, year): 
#     """Программа считает сколько дней в месяце
#     Args:
#         принимает месяц и год
#     Redsult: 
#         выводит на экран сколько дней в этом месяце 
#         (за одно проверяет является ли год высокостным)"""
    
#     if month == 'Февраль' and year % 4 == 0 and year % 100 != 0 or year % 400 == 0: 
#         print(f'В этом месяце Февраль : 29 дней! И этот год является высокостным!')
#     elif month in dict: 
#         print(f'В этом месяце {month} : {dict[month]} дней!')
#     else:
#         print('Такого месяца нет!')

# print(Monthfunc(input('Напечатайте месяц:').title(),int(input('Введите год:'))))

# 


# 3) '''Напишите две функции с именами hex2int и int2hex для конвертации
# значений из шестнадцатеричной системы счисления (0, 1, 2, 3, 4, 5, 6, 7,
# 8, 9, A, B, C, D, E и F) в десятичную (по основанию 10) и обратно. Функ-
# ция hex2int должна принимать на вход строку с единственным символом
# в шестнадцатеричной системе и преобразовывать его в число от нуля
# до 15 в десятичной системе, тогда как функция int2hex будет выполнять
# обратное действие – принимать десятичное число из диапазона от 0 до
# 15 и возвращать шестнадцатеричный эквивалент. Обе функции должны
# принимать единственный параметр со входным значением и возвращать
# преобразованное число. Удостоверьтесь, что функция hex2int корректно
# обрабатывает буквы в верхнем и нижнем регистрах. Если введенное поль-
# зователем значение выходит за допустимые границы, вы должны вывести
# сообщение об ошибке.'''

# def hex2int():

# def int2hex(): 

# #

# 4) '''Представьте, что в вашем регионе устаревшим является формат номер-
# ных автомобильных знаков из трех букв, следом за которыми идут три
# цифры. Когда все номера такого шаблона закончились, было решено об-
# новить формат, поставив в начало четыре цифры, а за ними три буквы.
# Напишите функцию, которая будет генерировать случайный номерной
# знак. При этом номера в старом и новом форматах должны создаваться
# примерно с одинаковой вероятностью. В основной программе нужно сге-
# нерировать и вывести на экран случайный номерной знак.'''











def hex2int(a):
    try:
        return int(a, 16)
    except ValueError:
        print("Ошибка: Введенное значение не является допустимым символом шестнадцатеричной системы.")
        return None


def int2hex(b):
    if 0 <= b <= 15:
        return hex(b)[2:].upper()
    else:
        print("Ошибка: Введенное число должно быть в диапазоне от 0 до 15.")
        return None
print(hex2int('F')) 
print(int2hex(8))