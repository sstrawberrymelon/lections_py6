# Задача 1: Валидация пароля

# Пользователь хочет установить пароль для своей учетной записи. Пароль должен 
# соответствовать следующим критериям:

#     Длина пароля должна быть не менее 8 символов.
#     Пароль должен содержать хотя бы одну заглавную букву (A-Z).
#     Пароль должен содержать хотя бы одну строчную букву (a-z).
#     Пароль должен содержать хотя бы одну цифру (0-9).
#     Пароль должен содержать хотя бы один специальный символ из множества: !@#$%^&*()_-+=<>?/

# Напишите программу, которая запрашивает у пользователя пароль и затем проверяет, 
# удовлетворяет ли он всем критериям. Если пароль удовлетворяет всем критериям, программа 
# должна сообщить, что пароль принят. В противном случае, программа должна вывести сообщение 
# об ошибке, указывая, какие критерии не выполняются.

# password = str('Vvvedite parol ne menee 8 simvolov:')
# # print(dir(str))('Vvvedite parol:')
# def proverka_parolya(password):
#     """Проверяет соответсвуеит ли наш пароль нашим критериям
#     Args: 
#         password(str). Пароль для проверки
#     Returns: 
#         True: if password подходит по всем критериям
#         False: if password не подходит по какому-то одному критерию(уточняет причину)
#         """
#     min_len = 8 
#     uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
#     lowercase = "abcdefghijklmnopqrstuvwxyz"
#     digits = '0123456789'
#     symbols = '!@#$%^&*()_-+=<>?/'

#     if(len(password))<min_len:
#         return False, 'пароль должен быть не менее 8' 

#     if not any(char in uppercase for char in password):
#         return False, 'пароль должен иметь большие '
    
#     if not any(char in lowercase for char in password):
#         return False,'пароль должен содержать маленькие буквы'
    
#     if not any(char in digits for char in password):
#         return False,'пароль должен содержать цифры'
    
#     if not any(char in symbols for char in password): 
#         return False,'пароль должен содержать символы'
    
#     return True,'пароль принят!'

# print(proverka_parolya(input()))

# _______________________________________________________________________________________


# Задача 2: Обработка ошибок при работе с элементами списка:

# Создайте список чисел и попробуйте выполнить некоторые операции над элементами списка. 
# Обработайте исключения, такие как IndexError, ValueError и ZeroDivisionError.
# ls = ['123',123, True, None, '@@@@']
# try:
#     a = int(input('Vvedite nomer indeksa:'))
#     print(ls[a])
# except IndexError:
#     print('такого индекса не существует!')

# try: 
#     a = int(input('Vvedite tsifru:'))
#     print(a * 1)
# except ValueError:
#     print('пожалуйста вводите только цифры!')

# try:
#     a = int(input('Введите делимое:'))
#     b = int(input('Введите делитель:'))
#     print(a/b)
# except ZeroDivisionError:
#     print('на ноль делить нельзя!')






#____________________________________________________________________________________________

# Задача 3: Поиск значения в словаре с обработкой исключения:

# Создайте словарь с данными (например, словарь с именами и возрастами людей). 
# Затем запросите у пользователя имя и попробуйте найти возраст этой персоны в словаре.
# Обработайте исключение, если имя не найдено.

# names_and_ages = {'V': 29,
#                   'Jhope': 31,
#                   'JK':27 }

# try: 
#     name = input('Vvedite imya:')
#     print(names_and_ages[name])
# except KeyError:
#     print('вышего имени не существует!')

