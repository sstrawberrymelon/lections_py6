# Даны 2 списка:

# Создать новые списки и вывести их результаты:

#     Где будут только целые числа, которые больше 4
#     Где будут только числа с плавающей точкой, имеющие отрицательное значение
#     Где будут только наименования производителей ноутбуков
# list_a = [1, 2, 39, 5, -6, 7, 8.1, 9, 10, -43, -134, 3.14,2.55, 'Lenovo', 'Acer', 'Asus']

# list_b  = [123, -1.85, 43, -4.4, 8.16, - 5, 3.26, 21, 22, -43.97, 'Dell', 'HP', 'Lenovo', 
# 'Acer' ]

# list_4 = [x for x in list_a + list_b if isinstance(x,int) and x > 4]
# list_float = [x for x in list_a + list_b if isinstance(x,float) and x < 0]
# list_note = [x for x in list_a + list_b if isinstance(x, str)]

# print('list_4:',list_4,'list_float:', list_float,'list_note:', list_note)

# Продолжить работу со списками, содержащие цифры и вывести их результат:
# list_num = [x for x in list_a + list_b if isinstance(x, (int,float))]
# print('Лист с цифрами:',list_num)

#      Вставить в середину каждого списка новое значение(любое)
# list_4.insert(6, 800)
# list_float.insert(2, 8.78)
# list_note.insert(6, 'HP')
# print('Новое значение:',list_4,'Новое значение:', list_float, 'Новое значение:',list_note)
#     Найти сумму элементов в каждом списке
# sum_4 = sum(list_4)
# sum_float = sum(list_float)
# sum_num = sum(list_num)
# print('sum_4:',sum_4,'sum_float:',sum_float,'sum_num:',sum_num)

#     Посчитать количество элементов в каждом списке
# print('len_4:',(len(list_4)),'len_float:', len((list_float)),'len_note:',len((list_note)),'len_num:',len((list_num)))



# В списках с наименованиями (вывести результат):

#     Проверить наличие повторяющихся данных, если есть удалить.
# res = []
# for x in list_note:
#     if list_note.count(x)>1:
#         res.append(x)

# print('Повторяющиеся:',set(res))


#     Добавить в начало и конец по одному производителю.
# list_note.insert(0,'Apple')
# list_note.insert(1,'Samsung')
# print('Новые производители:',list_note)
# # ________________________________________________________________________________________

# Напишите программу имитирует регистрацию пользователя.

# Программа должна запросить у Вас:

# Name

# Email

# Password

# Программа должна вывести сообщение:
# <name>, Вы успешно зарегистрировались, информация отправлена на <Email>

# Используйте разные методы форматирования сторок (5 методов) и напишите в комментариях 
# какой метод вам больше всего понравился и почему.

# name = input('Введите имя:')
# email = input('Введите почту:')
# password = input('Введите пароль:')
# print(f'{name} Вы успешно зарегистрировались, информация отправлена на {email}')
# print(name,'Вы успешно зарегистрировались, информация отправлена на', email)
# print('%s Вы успешно зарегистрировались, информация отправлена на %s' %(name,email) )
# print('{name} Вы успешно зарегистрировались, информация отправлена на \
# {email}'.format(name=name,email=email) ) 
# print('{} Вы успешно зарегистрировались, информация отправлена на {}'.format(name,email))
# _____________________________________________________________________________________________


#  Ваша программа должна проверить:

#     введенное имя на наличие в конце хотя бы одной цифры
#     введенный пароль на наличие только чисел
#     введенный email на окончание символами ".kg" 
#     в случае ошибки выдавать соответствуещее сообщение
# loop = True
# while loop: 
#     name = input('Введите имя:')

#     if name.isalpha():
#         print('Принято!')
#         break
#     else:
#         print('Попробуйте еще раз!')
#         continue



# while loop:
    
#     password = input('Введите пароль состоящий только из цифр:')

#     if password.isdigit():
#         print('Принято!')
#         break
#     else:
#         print('Попробуйте еще раз!')
#         continue

# while loop: 

#     email = input('Введите почту:')
#     if email.endswith('.kg'):
#         print('Принято!')
#         break
#     else:
#         print('попробуйте еще раз!') 
#         continue

# ___________________________________________________________________________________
# Напишите программу, которое учитывает количество уникальных букв в слове. 
# Уникальные буквы — это те, которые встречаются всего один раз.

 

# Пример 1:

# Введите слово: привет
# Кол-во уникальных букв: 6

# Пример 2:

# Введите слово: лава
# Кол-во уникальных букв: 2


# word = input('Введите слово:')

# counter_bukvy = {}
# for bukva in word:
#     if bukva in counter_bukvy:
#         counter_bukvy[bukva] += 1
#     else:
#         counter_bukvy[bukva] = 1
# unique_count = sum(1 for count in counter_bukvy.values() if count == 1)
# print(unique_count)


# unique_letters = set(word)
# len(unique_letters)
# print(unique_letters)



# ________________________________________________________________________________________
# Асан слишком ленивый чтобы считать длину окружности и решил написать программу 
# которая будет считать вместо него длину, помогите написать ему программу, 
# которая спрашивает у Асана радиус окружности и выдает (округленный до верхнего 
# значения ответ, если радиус окружности больше или равен 10) ответ (использовать 
# библиотеку math)  

# import math
# r = int(input('Введите радиус окружности:'))

# if r <= 10:
#     p = 2 * 3.14 * r 
#     print(p)
# else: 
#     p2 = 2 * math.pi * r   # (int(math.pi))
#     print(p2)